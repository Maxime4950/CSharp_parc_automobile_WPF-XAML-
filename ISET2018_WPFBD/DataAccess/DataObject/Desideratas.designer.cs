#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISET2018_WPFBD.DataAccess.DataObject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\USERS\\MAESM\\DOCUMENTS\\COMPLEMENT_P\\ISET2018_WPFBD_MVVM_CONCEPT\\ISET2018_WPFBD\\" +
		"BD_VOITURE_MVVM.MDF")]
	public partial class DesideratasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertDesideratasVoiture(DesideratasVoiture instance);
    partial void UpdateDesideratasVoiture(DesideratasVoiture instance);
    partial void DeleteDesideratasVoiture(DesideratasVoiture instance);
    #endregion
		
		public DesideratasDataContext() : 
				base(global::ISET2018_WPFBD.Properties.Settings.Default.C__USERS_MAESM_DOCUMENTS_COMPLEMENT_P_ISET2018_WPFBD_MVVM_CONCEPT_ISET2018_WPFBD_BD_VOITURE_MVVM_MDFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DesideratasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DesideratasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DesideratasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DesideratasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DesideratasVoiture> DesideratasVoiture
		{
			get
			{
				return this.GetTable<DesideratasVoiture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesideratasVoiture")]
	public partial class DesideratasVoiture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDesiderata;
		
		private int _idClient;
		
		private int _idMarque;
		
		private System.Nullable<int> _idModele;
		
		private System.Nullable<int> _idCat;
		
		private System.Nullable<int> _kilometrageMax;
		
		private System.Nullable<int> _idCouleur;
		
		private System.Nullable<int> _idCarburant;
		
		private System.Nullable<int> _anneeMin;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDesiderataChanging(int value);
    partial void OnidDesiderataChanged();
    partial void OnidClientChanging(int value);
    partial void OnidClientChanged();
    partial void OnidMarqueChanging(int value);
    partial void OnidMarqueChanged();
    partial void OnidModeleChanging(System.Nullable<int> value);
    partial void OnidModeleChanged();
    partial void OnidCatChanging(System.Nullable<int> value);
    partial void OnidCatChanged();
    partial void OnkilometrageMaxChanging(System.Nullable<int> value);
    partial void OnkilometrageMaxChanged();
    partial void OnidCouleurChanging(System.Nullable<int> value);
    partial void OnidCouleurChanged();
    partial void OnidCarburantChanging(System.Nullable<int> value);
    partial void OnidCarburantChanged();
    partial void OnanneeMinChanging(System.Nullable<int> value);
    partial void OnanneeMinChanged();
    #endregion
		
		public DesideratasVoiture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDesiderata", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDesiderata
		{
			get
			{
				return this._idDesiderata;
			}
			set
			{
				if ((this._idDesiderata != value))
				{
					this.OnidDesiderataChanging(value);
					this.SendPropertyChanging();
					this._idDesiderata = value;
					this.SendPropertyChanged("idDesiderata");
					this.OnidDesiderataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClient", DbType="Int NOT NULL")]
		public int idClient
		{
			get
			{
				return this._idClient;
			}
			set
			{
				if ((this._idClient != value))
				{
					this.OnidClientChanging(value);
					this.SendPropertyChanging();
					this._idClient = value;
					this.SendPropertyChanged("idClient");
					this.OnidClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarque", DbType="Int NOT NULL")]
		public int idMarque
		{
			get
			{
				return this._idMarque;
			}
			set
			{
				if ((this._idMarque != value))
				{
					this.OnidMarqueChanging(value);
					this.SendPropertyChanging();
					this._idMarque = value;
					this.SendPropertyChanged("idMarque");
					this.OnidMarqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idModele", DbType="Int")]
		public System.Nullable<int> idModele
		{
			get
			{
				return this._idModele;
			}
			set
			{
				if ((this._idModele != value))
				{
					this.OnidModeleChanging(value);
					this.SendPropertyChanging();
					this._idModele = value;
					this.SendPropertyChanged("idModele");
					this.OnidModeleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCat", DbType="Int")]
		public System.Nullable<int> idCat
		{
			get
			{
				return this._idCat;
			}
			set
			{
				if ((this._idCat != value))
				{
					this.OnidCatChanging(value);
					this.SendPropertyChanging();
					this._idCat = value;
					this.SendPropertyChanged("idCat");
					this.OnidCatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kilometrageMax", DbType="Int")]
		public System.Nullable<int> kilometrageMax
		{
			get
			{
				return this._kilometrageMax;
			}
			set
			{
				if ((this._kilometrageMax != value))
				{
					this.OnkilometrageMaxChanging(value);
					this.SendPropertyChanging();
					this._kilometrageMax = value;
					this.SendPropertyChanged("kilometrageMax");
					this.OnkilometrageMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCouleur", DbType="Int")]
		public System.Nullable<int> idCouleur
		{
			get
			{
				return this._idCouleur;
			}
			set
			{
				if ((this._idCouleur != value))
				{
					this.OnidCouleurChanging(value);
					this.SendPropertyChanging();
					this._idCouleur = value;
					this.SendPropertyChanged("idCouleur");
					this.OnidCouleurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCarburant", DbType="Int")]
		public System.Nullable<int> idCarburant
		{
			get
			{
				return this._idCarburant;
			}
			set
			{
				if ((this._idCarburant != value))
				{
					this.OnidCarburantChanging(value);
					this.SendPropertyChanging();
					this._idCarburant = value;
					this.SendPropertyChanged("idCarburant");
					this.OnidCarburantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anneeMin", DbType="Int")]
		public System.Nullable<int> anneeMin
		{
			get
			{
				return this._anneeMin;
			}
			set
			{
				if ((this._anneeMin != value))
				{
					this.OnanneeMinChanging(value);
					this.SendPropertyChanging();
					this._anneeMin = value;
					this.SendPropertyChanged("anneeMin");
					this.OnanneeMinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
