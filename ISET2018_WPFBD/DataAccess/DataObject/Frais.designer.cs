#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISET2018_WPFBD.DataAccess.DataObject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\USERS\\MAESM\\DOCUMENTS\\COMPLEMENT_P\\ISET2018_WPFBD_MVVM_CONCEPT\\ISET2018_WPFBD\\" +
		"BD_VOITURE_MVVM.MDF")]
	public partial class FraisDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertFraisVoiture(FraisVoiture instance);
    partial void UpdateFraisVoiture(FraisVoiture instance);
    partial void DeleteFraisVoiture(FraisVoiture instance);
    #endregion
		
		public FraisDataContext() : 
				base(global::ISET2018_WPFBD.Properties.Settings.Default.C__USERS_MAESM_DOCUMENTS_COMPLEMENT_P_ISET2018_WPFBD_MVVM_CONCEPT_ISET2018_WPFBD_BD_VOITURE_MVVM_MDFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FraisDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FraisDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FraisDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FraisDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FraisVoiture> FraisVoiture
		{
			get
			{
				return this.GetTable<FraisVoiture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FraisVoiture")]
	public partial class FraisVoiture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFrais;
		
		private int _idVoiture;
		
		private string _nomFrais;
		
		private string _descriptionFrais;
		
		private int _coutFrais;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFraisChanging(int value);
    partial void OnidFraisChanged();
    partial void OnidVoitureChanging(int value);
    partial void OnidVoitureChanged();
    partial void OnnomFraisChanging(string value);
    partial void OnnomFraisChanged();
    partial void OndescriptionFraisChanging(string value);
    partial void OndescriptionFraisChanged();
    partial void OncoutFraisChanging(int value);
    partial void OncoutFraisChanged();
    #endregion
		
		public FraisVoiture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFrais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFrais
		{
			get
			{
				return this._idFrais;
			}
			set
			{
				if ((this._idFrais != value))
				{
					this.OnidFraisChanging(value);
					this.SendPropertyChanging();
					this._idFrais = value;
					this.SendPropertyChanged("idFrais");
					this.OnidFraisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVoiture", DbType="Int NOT NULL")]
		public int idVoiture
		{
			get
			{
				return this._idVoiture;
			}
			set
			{
				if ((this._idVoiture != value))
				{
					this.OnidVoitureChanging(value);
					this.SendPropertyChanging();
					this._idVoiture = value;
					this.SendPropertyChanged("idVoiture");
					this.OnidVoitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomFrais", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nomFrais
		{
			get
			{
				return this._nomFrais;
			}
			set
			{
				if ((this._nomFrais != value))
				{
					this.OnnomFraisChanging(value);
					this.SendPropertyChanging();
					this._nomFrais = value;
					this.SendPropertyChanged("nomFrais");
					this.OnnomFraisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriptionFrais", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descriptionFrais
		{
			get
			{
				return this._descriptionFrais;
			}
			set
			{
				if ((this._descriptionFrais != value))
				{
					this.OndescriptionFraisChanging(value);
					this.SendPropertyChanging();
					this._descriptionFrais = value;
					this.SendPropertyChanged("descriptionFrais");
					this.OndescriptionFraisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coutFrais", DbType="Int NOT NULL")]
		public int coutFrais
		{
			get
			{
				return this._coutFrais;
			}
			set
			{
				if ((this._coutFrais != value))
				{
					this.OncoutFraisChanging(value);
					this.SendPropertyChanging();
					this._coutFrais = value;
					this.SendPropertyChanged("coutFrais");
					this.OncoutFraisChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
